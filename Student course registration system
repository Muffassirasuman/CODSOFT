import java.util.ArrayList;
import java.util.Scanner;

class Course {
    private String courseCode;
    private String title;
    private String description;
    private int capacity;
    private String schedule;

    public Course(String courseCode, String title, String description, int capacity, String schedule) {
        this.courseCode = courseCode;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.schedule = schedule;
    }

    public String getCourseCode() {
        return courseCode;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public int getCapacity() {
        return capacity;
    }

    public String getSchedule() {
        return schedule;
    }
}

class Student {
    private int studentID;
    private String name;
    private ArrayList<Course> registeredCourses;

    public Student(int studentID, String name) {
        this.studentID = studentID;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    public int getStudentID() {
        return studentID;
    }

    public String getName() {
        return name;
    }

    public ArrayList<Course> getRegisteredCourses() {
        return registeredCourses;
    }

    public void registerForCourse(Course course) {
        if (course.getCapacity() > 0) {
            registeredCourses.add(course);
            course.getcapacity();
            System.out.println(name + " has successfully registered for " + course.getTitle());
        } else {
            System.out.println("Sorry, " + course.getTitle() + " is full. Registration failed.");
        }
    }

    public void removeCourse(Course course) {
        if (registeredCourses.contains(course)) {
            registeredCourses.remove(course);
            course.getcapacity();
            System.out.println(name + " has successfully dropped " + course.getTitle());
        } else {
            System.out.println(name + " is not registered for " + course.getTitle() + ". Removal failed.");
        }
    }
}

public class CourseRegistrationSystem {
    public static void main(String[] args) {
        Course course1 = new Course("CSCI101", "Introduction to Programming", "Basic programming concepts", 30, "Mon/Wed 10:00 AM - 11:30 AM");
        Course course2 = new Course("MATH202", "Linear Algebra", "Algebraic structures and linear equations", 25, "Tue/Thu 1:00 PM - 2:30 PM");
        Course course3 = new Course("ENG101", "English Composition", "Writing and composition skills", 20, "Mon/Fri 9:00 AM - 10:30 AM");

        ArrayList<Course> availableCourses = new ArrayList<>();
        availableCourses.add(course1);
        availableCourses.add(course2);
        availableCourses.add(course3);

        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the Course Registration System!");

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. View Available Courses");
            System.out.println("2. Register for a Course");
            System.out.println("3. Drop a Course");
            System.out.println("4. Exit");

            System.out.print("Enter your choice (1-4): ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    displayAvailableCourses(availableCourses);
                    break;
                case 2:
                    registerForCourse(availableCourses);
                    break;
                case 3:
                    dropCourse(availableCourses);
                    break;
                case 4:
                    System.out.println("Exiting Course Registration System. Thank you!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please choose a valid option.");
            }
        }
    }

    private static void displayAvailableCourses(ArrayList<Course> courses) {
        System.out.println("\nAvailable Courses:");
        for (Course course : courses) {
            System.out.println("Course Code: " + course.getCourseCode());
            System.out.println("Title: " + course.getTitle());
            System.out.println("Description: " + course.getDescription());
            System.out.println("Capacity: " + course.getCapacity());
            System.out.println("Schedule: " + course.getSchedule());
            System.out.println("--------------");
        }
    }

    private static void registerForCourse(ArrayList<Course> courses) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("\nStudent Registration:");

        System.out.print("Enter student ID: ");
        int studentID = scanner.nextInt();

        System.out.print("Enter student name: ");
        scanner.nextLine(); // Consume newline
        String studentName = scanner.nextLine();

        Student student = new Student(studentID, studentName);

        displayAvailableCourses(courses);

        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.next();

        Course selectedCourse = findCourseByCode(courses, courseCode);

        if (selectedCourse != null) {
            student.registerForCourse(selectedCourse);
        } else {
            System.out.println("Invalid course code. Registration failed.");
        }
    }

    private static void dropCourse(ArrayList<Course> courses) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("\nStudent Course Drop:");

        System.out.print("Enter student ID: ");
        int studentID = scanner.nextInt();

        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.next();

        Student student = new Student(studentID, ""); // Dummy student for dropping course

        Course selectedCourse = findCourseByCode(courses, courseCode);

        if (selectedCourse != null) {
            student.removeCourse(selectedCourse);
        } else {
            System.out.println("Invalid course code. Course drop failed.");
        }
    }

    private static Course findCourseByCode(ArrayList<Course> courses, String courseCode) {
        for (Course course : courses) {
            if (course.getCourseCode().equalsIgnoreCase(courseCode)) {
                return course;
            }
        }
        return null;
    }
}
